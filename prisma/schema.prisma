// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  LEARNER
  INSTRUCTOR
  ADMIN
}

model User {
  id                String               @id @default(auto()) @map("_id") @db.ObjectId
  email             String               @unique
  password          String?
  name              String
  image             String?
  bio               String?
  facebook_id       String?
  youtube_id        String?
  titok_id          String?
  role              Role                 @default(LEARNER)
  registration_date DateTime             @default(now())
  verify_date       DateTime?
  course            Course[]
  forgot_password   PasswordResetToken[]
}

model PasswordResetToken {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  token        String   @unique
  token_expiry DateTime @default(now())
  user_id      String   @db.ObjectId
  user         User     @relation(fields: [user_id], references: [id])
  isDeleted    Boolean  @default(false)
}

model Topic {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  title  String   @unique
  course Course[]
}

model Course {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  topic_id         String?   @db.ObjectId
  topic            Topic?    @relation(fields: [topic_id], references: [id])
  owner_id         String   @db.ObjectId
  owner            User     @relation(fields: [owner_id], references: [id])
  title            String   @unique
  description      String?
  learning_outcome String?
  slug             String
  picture          String?
  chapters         Chapter[]
  create_at        DateTime @default(now())
  update_at        DateTime @updatedAt
}

model Chapter {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  desciption String? 
  isPublished Boolean @default(false)
  videoUrl String?
  courseId String @db.ObjectId
  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
}
